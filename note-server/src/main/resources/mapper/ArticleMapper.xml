<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.lifepoem.blog.mapper.ArticleMapper">

    <resultMap id="BaseResultMap" type="fun.lifepoem.blog.domain.Article">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="articleName" column="article_name" jdbcType="VARCHAR"/>
        <result property="articleAuthor" column="article_author" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="gitUrl" column="git_url" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,article_name,article_author,
        content,git_url,create_time,
        update_time,del_flag
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from article
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from article
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="fun.lifepoem.blog.domain.Article"
            useGeneratedKeys="true">
        insert into article
        ( id, article_name, article_author
        , content, git_url, create_time
        , update_time, del_flag)
        values ( #{id,jdbcType=VARCHAR}, #{articleName,jdbcType=VARCHAR}, #{articleAuthor,jdbcType=VARCHAR}
               , #{content,jdbcType=VARCHAR}, #{gitUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
               , #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="fun.lifepoem.blog.domain.Article"
            useGeneratedKeys="true">
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="articleName != null">article_name,</if>
            <if test="articleAuthor != null">article_author,</if>
            <if test="content != null">content,</if>
            <if test="gitUrl != null">git_url,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="delFlag != null">del_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">id = #{id,jdbcType=VARCHAR},</if>
            <if test="articleName != null">article_name = #{articleName,jdbcType=VARCHAR},</if>
            <if test="articleAuthor != null">article_author = #{articleAuthor,jdbcType=VARCHAR},</if>
            <if test="content != null">content = #{content,jdbcType=VARCHAR},</if>
            <if test="gitUrl != null">git_url = #{gitUrl,jdbcType=VARCHAR},</if>
            <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if>
            <if test="delFlag != null">del_flag = #{delFlag,jdbcType=BIT},</if>
        </trim>
    </insert>

    <insert id="insertBatch">
        insert into article
        ( id, article_name, article_author
        , content, git_url, create_time
        , update_time, del_flag)
        values
        <foreach collection="articles" separator="," item="article">
            (#{article.id,jdbcType=VARCHAR}, #{article.articleName,jdbcType=VARCHAR},
            #{article.articleAuthor,jdbcType=VARCHAR}
            , #{article.content,jdbcType=VARCHAR}, #{article.gitUrl,jdbcType=VARCHAR},
            #{article.createTime,jdbcType=TIMESTAMP}
            , #{article.updateTime,jdbcType=TIMESTAMP}, #{article.delFlag,jdbcType=BIT})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="fun.lifepoem.blog.domain.Article">
        update article
        <set>
            <if test="articleName != null">
                article_name = #{articleName,jdbcType=VARCHAR},
            </if>
            <if test="articleAuthor != null">
                article_author = #{articleAuthor,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="gitUrl != null">
                git_url = #{gitUrl,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="fun.lifepoem.blog.domain.Article">
        update article
        set article_name   = #{articleName,jdbcType=VARCHAR},
            article_author = #{articleAuthor,jdbcType=VARCHAR},
            content        = #{content,jdbcType=VARCHAR},
            git_url        = #{gitUrl,jdbcType=VARCHAR},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_time    = #{updateTime,jdbcType=TIMESTAMP},
            del_flag       = #{delFlag,jdbcType=BIT}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>
